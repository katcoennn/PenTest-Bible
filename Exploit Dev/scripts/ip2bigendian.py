#!/usr/bin/env python3
"""
Author: Kathleen Coen
Date: 25 Jan 2024
Description: This Python script takes an IPv4 address as a command-line argument 
and converts it into a hexadecimal representation suitable for assembly language 
(x86 or x86-64) instructions. The resulting hexadecimal representation is then 
printed in a format that might be used as part of an assembly language instruction.
"""

import sys

def format_ipv4_to_hex(ip):
    hex_representation = ''
    for octet in ip.split('.')[::-1]:
        hex_chain = hex(int(octet))[2:].zfill(2)
        hex_representation += hex_chain
    return hex_representation

def main():
    if len(sys.argv) < 2:
        print("Usage: python {} <string>".format(sys.argv[0]))
        sys.exit(1)

    ip = sys.argv[1]
    hex_ip = format_ipv4_to_hex(ip)

    print('push 0x{} ; {}'.format(hex_ip, ip))

if __name__ == "__main__":
    main()

# To run this script, provide an IPv4 address as a command-line argument. For example:
# python ip2bigendian.py 10.0.0.99
